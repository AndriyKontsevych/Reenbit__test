{"version":3,"sources":["chatData.js","components/avatar.jsx","components/contact.jsx","components/contactSearch.jsx","components/sendMessage.jsx","components/message.jsx","chat.jsx","index.js"],"names":["contactsById","1","2","3","4","5","6","7","8","9","10","currentUser","messagesByContactId","Avatar","props","className","style","backgroundImage","imgUrl","Contact","handleClick","onClick","this","contact","icon_URL","online","name","messages","length","React","Component","ContactSearch","handelChange","event","setState","sendingText","target","value","serchingContactName","state","placeholder","onChange","SendMessage","handleKeyPress","e","charCode","updateMsgHistory","handleSubmit","onKeyPress","Message","message","contactId","msg","date","time","Chat","serchingName","setActiveContactId","id","activeContactId","msgText","activeContactMsgs","msgDate","Date","push","toLocaleDateString","toLocaleTimeString","hour","minute","fetch","then","res","json","result","error","console","Object","keys","filter","log","toLowerCase","includes","map","key","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd419f77.chunk.js","sourcesContent":["export const contactsById = {\n    1 : {\n        \"id\": 1,\n        \"name\": \"Steven Rogers\",\n        \"icon_URL\": \"https://image.flaticon.com/icons/png/128/892/892759.png\",\n        \"online\": true\n    },\n    2 : {\n        \"id\": 2,\n        \"name\": \"Bruce Wayne\",\n        \"icon_URL\": \"https://image.flaticon.com/icons/png/128/892/892699.png\",\n        \"online\": true\n    },\n    3 : {\n        \"id\": 3,\n        \"name\": \"Peter Parker\",\n        \"icon_URL\": \"https://image.flaticon.com/icons/png/128/1090/1090806.png\",\n        \"online\": true\n    },\n    4 : {\n      \"id\": 4,\n      \"name\": \"Fisher Cabrera\",\n      \"icon_URL\": \"https://image.flaticon.com/icons/png/128/2210/2210023.png\",\n      \"online\": true\n    },\n    5 : {\n      \"id\": 5,\n      \"name\": \"Gabrielle Barlow\",\n      \"icon_URL\": \"https://image.flaticon.com/icons/png/128/634/634772.png\",\n      \"online\": false\n    },\n    6 : {\n      \"id\": 6,\n      \"name\": \"Faulkner Marquez\",\n      \"icon_URL\": \"https://image.flaticon.com/icons/png/128/663/663086.png\",\n      \"online\": true\n    },\n    7 : {\n      \"id\": 7,\n      \"name\": \"Trina Sampson\",\n      \"icon_URL\": \"https://image.flaticon.com/icons/png/128/773/773355.png\",\n      \"online\": true\n    },\n    8 : {\n      \"id\": 8,\n      \"name\": \"Raquel Nelson\",\n      \"icon_URL\": \"https://image.flaticon.com/icons/png/128/892/892799.png\",\n      \"online\": false\n    },\n    9 : {\n      \"id\": 9,\n      \"name\": \"Annabelle Johnston\",\n      \"icon_URL\": \"https://image.flaticon.com/icons/png/128/2503/2503245.png\",\n      \"online\": false\n    },\n    10 : {\n      \"id\": 10,\n      \"name\": \"Tony Stark\",\n      \"icon_URL\": \"https://image.flaticon.com/icons/png/128/892/892776.png\",\n      \"online\": true\n    }\n};\n\nexport const currentUser = {\n  \"id\": 0,\n  \"name\": \"Me\",\n  \"icon_URL\": \"https://image.flaticon.com/icons/png/128/181/181549.png\",\n  \"online\": true\n};\n\nexport const messagesByContactId = {\n    1 : [\n      {'contactId': 0, 'msg': 'Hi!', 'date': '020.6.2020', 'time': '15:44'},\n      {'contactId': 1, 'msg': 'Hey man!', 'date': '02.06.2020', 'time': '15:45'},\n      {'contactId': 1, 'msg': 'How are you?', 'date': '02.06.2020', 'time': '15:46'}\n    ],\n\n    2 : [\n      {'contactId': 2, 'msg': 'Good afternoon!', 'date': '02.08.2020', 'time': '20:20'},\n      {'contactId': 0, 'msg': 'Hey man!', 'date': '02.08.2020', 'time': '20:25'},\n      {'contactId': 2, 'msg': 'How are you?', 'date': '02.08.2020', 'time': '20:27'}\n    ],\n    3 : [\n      {'contactId': 3, 'msg': 'Hello there. Thanks for the follow. Did you notice, that I am an egg? A talking egg? Damn!', 'date': '02.08.2020', 'time': '21:20'},\n      {'contactId': 0, 'msg': 'Yeah that is crazy, but people can change their own picture and build their own Twitter conversation with this generator, so it does not matter that you are an egg', 'date': '02.08.2020', 'time': '21:25'},\n      {'contactId': 3, 'msg': 'Thanks mate! Feel way better now. Oh, and guys, these messages will be removed once your add your own :-)', 'date': '02.08.2020', 'time': '21:27'}\n    ],\n    4 : [],\n    5 : [],\n    6 : [],\n    7 : [],\n    8 : [],\n    9 : [],\n    10 : []\n\n};\n","import React from 'react';\n\nexport default function Avatar (props){\n    return(\n        <div \n            className=\"avatar\"\n            style={{backgroundImage: \"url(\" + props.imgUrl + \")\"}}\n        >\n        </div>\n    )\n}","import React from 'react';\nimport Avatar from './avatar.jsx'\n\nexport default class Contact extends React.Component{\n\n    handleClick = () => {\n\t\tthis.props.onClick();\n    }\n    \n    render() {\n        return(\n            <div\n                className=\"contactInfo\"\n                onClick={this.handleClick}\n            >\n                <div className=\"iconBox\">\n                    <Avatar imgUrl={this.props.contact.icon_URL}/>\n                    <div className={this.props.contact.online ? \"online\" : \"offline\"}></div>\n                </div>\n                <div className=\"contact\">\n                    <div className=\"person\">\n                        {this.props.contact.name}\n                    </div>\n                    <div className=\"lastMsg\">\n                        {\n                            this.props.messages && this.props.messages.length > 0 ? this.props.messages[this.props.messages.length - 1][\"msg\"] : \"\"\n                        }\n                    </div>\n                </div>\n                <div className=\"dateMsg\">\n                    {this.props.messages && this.props.messages.length > 0  ? this.props.messages[this.props.messages.length - 1][\"date\"] : \"\"}\n                </div>\n            </div>\n        );\n    }\n} \n","import React from 'react';\n\nexport default class ContactSearch extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            sendingText: ''\n        };\n    }\n\n    handelChange = (event) => {\n\n        this.setState({\n            sendingText: event.target.value\n        });\n\n        this.props.serchingContactName(event.target.value)\n    };\n\n    render(){\n        return(\n                <input \n                    className=\"contactSearch \"\n                    placeholder=\"Search or start new chat\"\n                    value={this.state.sendingText}\n                    onChange={this.handelChange}\n                >\n                </input>\n        )\n    }\n}","import React from 'react';\n\nexport default class SendMessage extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = {\n            sendingText: ''\n        };\n    }\n\n    handelChange = (event) => {\n        this.setState({\n            sendingText: event.target.value\n        });\n    };\n\n    handleKeyPress = (e) => {\n        if(e.charCode === 13 && this.state.sendingText.length !== 0){\n\n            this.props.updateMsgHistory(this.state.sendingText)\n\n            this.setState({\n                sendingText: ''\n            });\n        }\n\n        return;\n    }\n\n    handleSubmit = (e) => {\n        if (this.state.sendingText.length === 0) {\n          return;\n        };\n\n        this.props.updateMsgHistory(this.state.sendingText)\n\n        this.setState({\n            sendingText: ''\n        });\n      };\n    \n    render(){\n        return(\n            <div \n                className=\"sendingInputWrapper\"\n            >\n                    <input \n                        className=\"sendingInput\"\n                        placeholder=\"Type your message\"\n                        value={this.state.sendingText}\n                        onChange={this.handelChange}\n                        onKeyPress={this.handleKeyPress}\n                    >\n                        \n                    </input>\n                    <div\n                        className=\"sendingBtn far fa-paper-plane\"\n                        onClick={this.handleSubmit}\n                    >\n                    </div>\n                </div>\n        );\n    };\n}","import React from 'react';\nimport Avatar from './avatar.jsx'\nimport { currentUser, contactsById } from '../chatData.js';\n\nexport default function Message(props){\n    if(props.message.contactId !== currentUser.id) \n        { return (\n            <div className=\"incomingMsg\">\n                <div className=\"msgContainer\">\n                < Avatar imgUrl={contactsById[props.message.contactId].icon_URL}/>\n                    <div className=\"incomingMsgText\">\n                        {props.message.msg}\n                    </div>\n                </div>\n                <div className=\"msgInfo\">\n                        {props.message.date}, {props.message.time}\n                    </div>\n            </div>\n        )} \n        else { \n            return (\n                <div className=\"answerMsg\">\n                    <div className=\"msgContainer\">\n                        <div className=\"answerMsgText\">\n                            {props.message.msg}\n                        </div>\n                    </div>\n                    <div className=\"msgInfo\">\n                            {props.message.date}, {props.message.time}\n                        </div>\n                </div>\n            )\n        }\n}","import React from 'react';\nimport {contactsById, messagesByContactId, currentUser } from './chatData.js';\nimport Avatar from './components/avatar.jsx';\nimport Contact from './components/contact.jsx';\nimport ContactSearch from './components/contactSearch.jsx';\nimport SendMessage from './components/sendMessage.jsx';\nimport Message from './components/message.jsx'\n\nexport default class Chat extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            serchingName: '',\n            activeContactId: 1,\n            contactsById: {...contactsById},\n            messagesByContactId: {...messagesByContactId}  \n        }\n    }\n\n    serchingContactName = ( name ) => {\n        this.setState({\n            serchingName: name\n        })\n    }\n\n    setActiveContactId = ( id ) => {\n        this.setState({\n            activeContactId : id\n        })\n    }\n\n    updateMsgHistory = (msgText) => {\n        const messagesByContactId = {...this.state.messagesByContactId};\n        const activeContactMsgs =  [...messagesByContactId[this.state.activeContactId]];\n        const msgDate = new Date();\n        \n        activeContactMsgs.push({\n            'contactId': currentUser.id, \n            'msg': msgText, \n            'date': msgDate.toLocaleDateString(), \n            'time': msgDate.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\n        });\n\n        messagesByContactId[this.state.activeContactId] = [...activeContactMsgs];\n        \n        this.setState({\n            messagesByContactId: {...messagesByContactId}\n        }, () => {\n            fetch(\"https://api.chucknorris.io/jokes/random\")\n            .then(res => res.json())\n            .then(\n              (result) => {\n                const messagesByContactId = {...this.state.messagesByContactId};\n                const activeContactMsgs =  [...messagesByContactId[this.state.activeContactId]];\n        \n                activeContactMsgs.push({\n                    'contactId': this.state.activeContactId, \n                    'msg': result.value, \n                    'date': msgDate.toLocaleDateString(), \n                    'time': msgDate.toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\n                });\n\n                if (contactsById[this.state.activeContactId].online === true) {\n                    messagesByContactId[this.state.activeContactId] = [...activeContactMsgs];\n                }\n                \n                this.setState({\n                  messagesByContactId: {...messagesByContactId}\n                });\n              },\n\n              (error) => {\n                console.error(error);\n              }\n            )\n        });\n        \n    }\n\n  render() {\n    return(\n          <div className=\"wrapper\">\n\t\t\t  <div className=\"contactsBlock\">\n                <div className=\"searchBar\">\n                    <div className=\"iconBox\">\n                        <Avatar imgUrl={currentUser.icon_URL}/>\n                        <div className=\"online\">\n                    </div>\n                    </div>\n\t\t\t\t\t<div className=\"inputSearch\">\n\t\t\t\t\t\t<div className=\"icon fas fa-search\"></div>\n\t\t\t\t\t\t<ContactSearch\n                            serchingContactName={this.serchingContactName}\n                        />\n\t\t\t\t\t</div>\n                </div>\n                <div className=\"chats\">\n                    Chats\n                </div>\n                { \n                    Object.keys(this.state.contactsById)\n                    .filter((id) => {\n                        console.log(Object.keys(this.state.contactsById))\n                        const contact = this.state.contactsById[id];\n                        \n                        return (contact.name).toLowerCase().includes(this.state.serchingName.toLowerCase())\n                    })\n                    .map( (id) => {\n                        const contact = this.state.contactsById[id];\n                        \n                        return (\n                            <Contact \n                                contact={contact}\n                                messages={this.state.messagesByContactId[contact.id]}\n                                key={`contact-${contact.id}`}\n                                // onClick={this.setActiveContactId.bind(this, id)}\n                                onClick={() => this.setActiveContactId(id)}\n                            />\n                        );\n                    })\n                }\n            </div>\n               \n\t\t\t   <div className=\"messagesBlock\">\n                <header className=\"currentContact\">\n                    <div className=\"iconBox\">\n                        <Avatar imgUrl={this.state.contactsById[this.state.activeContactId].icon_URL}/>\n                        <div className={this.state.contactsById[this.state.activeContactId].online ? \"online\" : \"offline\"}></div>\n                    </div>\n                    {this.state.contactsById[this.state.activeContactId].name}\n                </header>\n                <div className=\"msgHistory\">\n                    {this.state.messagesByContactId[this.state.activeContactId].map( (message, index ) => {\n                    return (\n                        <Message \n                            message={message}\n                            key={`message-${index}`}\n                        />\n                    )\n                })}   \n                </div>\n                <SendMessage \n                    updateMsgHistory={this.updateMsgHistory}\n                />\n            </div>\n          </div>\n        ) ;\n  } \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Chat from './chat.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Chat />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}